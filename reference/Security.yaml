openapi: 3.1.0
info:
  description: 'Private keys and mnemonic phrases are the only ways of unlocking wallets with crypto assets. If you lose or expose your keys, you will probably lose your assets forever. With the Tatum Key Management System you can securely store private keys and mnemonics locally on your server and use them to sign any pending transactions that are periodically pulled via the Tatum API to your server.'
  contact: {}
  title: Security & KMS
  version: 3.9.4
  x-logo:
    url: 'https://tatum.io/images/logo.svg'
    altText: Tatum
servers:
  - url: 'https://api-eu1.tatum.io'
  - url: 'https://api-us-west1.tatum.io'
tags:
  - description: ''
    name: Key Management System
  - description: ''
    name: Security
  - description: ''
    name: Self service management
paths:
  '/v3/kms/pending/{chain}':
    get:
      description: <h4>1 credit per API call.</h4><br/> <ul> <li> Pass <b>transactionId</b> into <b>path</b> to retrieve transaction detail <br/></li> <li> Fill optionaly <b>signatureId</b> as a query parameter to specify further transaction </li> </ul>
      operationId: GetPendingTransactionsToSign
      summary: Get pending transactions to sign
      tags:
        - Key Management System
      parameters:
        - description: Blockchain to get pending transactions for.
          in: path
          name: chain
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            enum:
              - BNB
              - BTC
              - ETH
              - XLM
              - XRP
              - BCH
              - LTC
              - DOGE
              - VET
              - BSC
              - ADA
              - MATIC
              - CELO
              - FLOW
              - TRON
              - ONE
              - XDC
              - EGLD
              - KLAY
              - LUNA
              - SOL
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingTransaction'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/kms/{id}':
    get:
      description: <h4>1 credit per API call.</h4><br/> <p>Get detail of transaction to be signed / that was already signed and contains transactionId.</p></li>
      operationId: GetPendingTransactionToSign
      summary: Get transaction details
      tags:
        - Key Management System
      parameters:
        - description: ID of transaction
          in: path
          name: id
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingTransaction'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
    delete:
      description: '<h4>2 credits per API call.</h4><br/> Delete pending transaction to be signed. After deletion, the withdrawal linked to it is cancelled automatically. <br/>'
      operationId: DeletePendingTransactionToSign
      summary: Delete pending transaction to sign
      tags:
        - Key Management System
      parameters:
        - description: Transaction ID
          in: path
          name: id
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
        - description: 'This parameter defines whether fee should be reverted to account balance as well as amount. It defaults to <i>true</i>. A typical use for <i>true</i> is when withdrawal was not broadcast to a blockchain, whereas <i>false</i> is usually used for Ethereum ERC20 based currencies.'
          in: query
          name: revert
          required: false
          schema:
            default: 'true'
            example: 'true'
            type: string
            enum:
              - 'true'
              - 'false'
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/kms/{id}/{txId}':
    put:
      description: |
        <h4>2 credits per API call.</h4><br/>
        Use this method to complete a transaction that is pending signature.<br/>
        The pending transaction is marked as completed and updated with a blockchain transaction ID.
      operationId: CompletePendingSignature
      summary: Complete pending transaction to sign
      tags:
        - Key Management System
      parameters:
        - description: ID of pending transaction
          in: path
          name: id
          required: true
          schema:
            type: string
            example: f91827364f91827364ajdur7
            maxLength: 24
            minLength: 24
        - description: transaction ID of blockchain transaction
          in: path
          name: txId
          required: true
          schema:
            type: string
            example: '0x94Ce79B9F001E25BBEbE7C01998A78F7B27D1326'
            maxLength: 80
            minLength: 10
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/security/address/{address}':
    get:
      description: |
        <h4>1 credit per API call.</h4><br/>        
        Use this method to check if a certain blockchain address is malicious. A malicious address might contain assets from the dark web, be connected to scam projects or contain stolen funds.<br/>
            <ul>Supported Chains:
              <li>  ETH</li>
              <li>  BTC</li>
              <li>  LTC</li>
            </ul>
            <ul>How to use:
              <li> Pass account <b>address</b> into <b>path</b>
              <li> <b>Response</b> valid/invalid to indicate address status </li>
            </ul>
      operationId: CheckMalicousAddress
      summary: Check malicous address
      tags:
        - Security
      parameters:
        - description: Blockchain Address to check
          in: path
          name: address
          required: true
          schema:
            example: '0x002Bf459dC58584D58886169EA0E80f3Ca95FFAF'
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Whether address is malicous or not
                    example: valid
                    enum:
                      - valid
                      - invalid
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/tatum/usage:
    get:
      description: |
        <h4>1 credit per API call.</h4><br/>
        List information about <b>credit usage</b> during the previous month.<br/><br/>
        Returns array with:
          <ul>
            <li><b>day</b> - UTC millisecond timestamp of a given day</li>
            <li><b>usage</b> - Credits consumed per day</li>
          </ul>
      operationId: getCredits
      summary: List credit consumption for last month
      tags:
        - Self service management
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Consumption'
                type: array
          description: OK
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/tatum/rate/{currency}':
    get:
      description: |
        <h4>1 credit per API call.</h4><br/>
        Get currenct exchange rate of the supported FIAT / crypto asset.<br/>
        <ul>
          <li><b>path</b> parameter <i>currency</i> represents the FIAT or crypto asset whose exchange rate is requested.</li>
          <li><b>query</b> parameter <i>basePair</i> indicates the base FIAT currency to which the value of the requested asset should be converted.</li>
        </ul>
        <br/>
        Base pair is EUR by default. E.g. to obtain exchange rate for the Bitcoin, response value for the API call will be expressed as 1 BTC = 10,000 EUR.
      operationId: getExchangeRate
      summary: Get currenct exchange rate of the supported FIAT / crypto asset
      tags:
        - Self service management
      parameters:
        - description: FIAT or crypto asset
          in: path
          name: currency
          required: true
          schema:
            type: string
            example: BTC
            enum:
              - AED
              - AFN
              - ALL
              - AMD
              - ANG
              - AOA
              - ARS
              - AUD
              - AWG
              - AZN
              - BAM
              - BAT
              - BBD
              - BCH
              - BDT
              - BGN
              - BHD
              - BIF
              - BMD
              - BNB
              - BND
              - BOB
              - BRL
              - BSC
              - ADA
              - MATIC
              - BSD
              - BTC
              - BTN
              - BUSD
              - BWP
              - BYN
              - BYR
              - BZD
              - CAD
              - CAKE
              - CDF
              - CELO
              - CHF
              - CLF
              - CLP
              - CNY
              - COP
              - CRC
              - CUC
              - CUP
              - CVE
              - CZK
              - DJF
              - DKK
              - DOP
              - DOGE
              - DZD
              - EGLD
              - EGP
              - ERN
              - ETB
              - ETH
              - EUR
              - FJD
              - FKP
              - FLOW
              - FUSD
              - FREE
              - GMC
              - GMC_BSC
              - RMD
              - GBP
              - GEL
              - GGP
              - GHS
              - GIP
              - GMD
              - GNF
              - GTQ
              - GYD
              - HKD
              - HNL
              - HRK
              - HTG
              - HUF
              - IDR
              - ILS
              - IMP
              - INR
              - IQD
              - IRR
              - ISK
              - JEP
              - JMD
              - JOD
              - JPY
              - KES
              - KGS
              - KHR
              - KMF
              - KPW
              - KRW
              - KWD
              - KYD
              - KZT
              - LAK
              - LBP
              - LEO
              - LINK
              - LKR
              - LRD
              - LSL
              - LTC
              - LTL
              - LVL
              - LYD
              - MAD
              - MDL
              - MGA
              - MKD
              - MKR
              - MMK
              - MMY
              - MNT
              - MOP
              - MRO
              - MUR
              - MVR
              - MWK
              - MXN
              - MYR
              - MZN
              - NAD
              - NGN
              - NIO
              - NOK
              - NPR
              - NZD
              - OMR
              - PAB
              - PAX
              - PAXG
              - PEN
              - PGK
              - PHP
              - PKR
              - PLN
              - PLTC
              - PYG
              - QAR
              - RON
              - RSD
              - RUB
              - RWF
              - SAR
              - SBD
              - SCR
              - SDG
              - SEK
              - SGD
              - SHP
              - SLL
              - SOS
              - SRD
              - STD
              - SVC
              - SYP
              - SZL
              - THB
              - TJS
              - TMT
              - TND
              - TOP
              - TRY
              - TTD
              - TRON
              - TUSD
              - TWD
              - TZS
              - UAH
              - UGX
              - UNI
              - USD
              - USDC
              - USDT
              - USDT_TRON
              - USDT_MATIC
              - QTUM
              - UYU
              - UZS
              - VEF
              - VND
              - VUV
              - WST
              - XAF
              - XAG
              - XAU
              - XCD
              - WBTC
              - XCON
              - XDR
              - XLM
              - XOF
              - XPF
              - XRP
              - YER
              - ZAR
              - ZMK
              - ZMW
              - ZWL
        - description: FIAT to convert as a basePair
          in: query
          name: basePair
          schema:
            type: string
            example: USD
            enum:
              - AED
              - AFN
              - ALL
              - AMD
              - ANG
              - AOA
              - ARS
              - AUD
              - AWG
              - AZN
              - BAM
              - BBD
              - BDT
              - BGN
              - BHD
              - BIF
              - BMD
              - BND
              - BOB
              - BRL
              - BSD
              - BTN
              - BWP
              - BYN
              - BYR
              - BZD
              - CAD
              - CDF
              - CHF
              - CLF
              - CLP
              - CNY
              - COP
              - CRC
              - CUC
              - CUP
              - CVE
              - CZK
              - DJF
              - DKK
              - DOP
              - DOGE
              - DZD
              - EGP
              - ERN
              - ETB
              - ETH
              - EUR
              - FJD
              - FKP
              - FLOW
              - FUSD
              - GBP
              - GEL
              - GGP
              - GHS
              - GIP
              - GMD
              - GNF
              - GTQ
              - GYD
              - HKD
              - HNL
              - HRK
              - HTG
              - HUF
              - IDR
              - ILS
              - IMP
              - INR
              - IQD
              - IRR
              - ISK
              - JEP
              - JMD
              - JOD
              - JPY
              - KES
              - KGS
              - KHR
              - KMF
              - KPW
              - KRW
              - KWD
              - KYD
              - KZT
              - LAK
              - LBP
              - LKR
              - LRD
              - LSL
              - LTL
              - LVL
              - LYD
              - MAD
              - MDL
              - MGA
              - MKD
              - MMK
              - MNT
              - MOP
              - MRO
              - MUR
              - MVR
              - MWK
              - MXN
              - MYR
              - MZN
              - NAD
              - NGN
              - NIO
              - NOK
              - NPR
              - NZD
              - OMR
              - PAB
              - PEN
              - PGK
              - PHP
              - PKR
              - PLN
              - PYG
              - QAR
              - RON
              - RSD
              - RUB
              - RWF
              - SAR
              - SBD
              - SCR
              - SDG
              - SEK
              - SGD
              - SHP
              - SLL
              - SOS
              - SRD
              - STD
              - SVC
              - SYP
              - SZL
              - THB
              - TJS
              - TMT
              - TND
              - TOP
              - TRY
              - TTD
              - TWD
              - TZS
              - UAH
              - UGX
              - USD
              - UYU
              - UZS
              - VEF
              - VND
              - VUV
              - WST
              - XAF
              - XAG
              - XAU
              - XCD
              - XDR
              - XOF
              - XPF
              - YER
              - ZAR
              - ZMK
              - ZMW
              - ZWL
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeRate'
          description: OK
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/tatum/version:
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get current version of the API.</p>
      operationId: getVersion
      summary: Get API version
      tags:
        - Self service management
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                    example: 3.0.2
                  status:
                    type: string
                    example: ACTIVE
                  testnet:
                    type: boolean
                    example: true
                  planName:
                    type: string
                    example: Free
                  planCode:
                    type: string
                    example: FREE
                  price:
                    type: number
                    example: 9
                  expiration:
                    type: number
                    example: 4113115784397
                  creditLimit:
                    type: number
                    example: 1000000000
                  usage:
                    type: number
                    example: 25656634
                  rolloverDay:
                    type: number
                    example: 4
          description: OK
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/tatum/freeze:
    put:
      description: |
        <h4>2 credits per API call.</h4><br/>
        Use this method to freeze the API Key sent in the <i>X-API-Key</i> header.<br/>
        After the request is completed successfully, it is not possible to perform sensitive operations like sending ledger transactions, off-chain transactions or blockchain transactions; broadcasting blockchain transactions; performing Order book trades; or creating blockages. Only read operations are permitted.
      operationId: freezeApiKey
      summary: Freeze API Key
      tags:
        - Self service management
      responses:
        '204':
          description: OK
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
    delete:
      description: |
        <h4>2 credits per API call.</h4><br/>
        Use this method to unfreeze the API Key sent in the <i>X-API-Key</i> header.<br/>
        After the request is completed successfully, it is once again possible to perform sensitive operations like sending ledger transactions, off-chain transactions or blockchain transactions; broadcasting blockchain transactions; performing Order book trades; or creating blockages.
      operationId: unfreezeApiKey
      summary: Unfreeze API Key
      tags:
        - Self service management
      responses:
        '204':
          description: OK
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error401NotActive'
                  - $ref: '#/components/schemas/Error401Invalid'
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
components:
  schemas:
    Address:
      required:
        - address
        - currency
      properties:
        address:
          description: Blockchain address.
          example: 7c21ed165e294db78b95f0f181086d6f
          type: string
        currency:
          description: 'Currency of generated address. BTC, LTC, DOGE, BCH, ETH, XRP, XLM, BNB, TRX, ERC20, TRC20.'
          example: BTC
          type: string
        derivationKey:
          description: Derivation key index for given address.
          format: int32
          type: integer
          maximum: 2147483647
        xpub:
          description: 'Extended public key to derive address from. In case of XRP, this is account address, since address is defined as DestinationTag, which is address field. In case of XLM, this is account address, since address is defined as message, which is address field.'
          example: xpub6FB4LJzdKNkkpsjggFAGS2p34G48pqjtmSktmK2Ke3k1LKqm9ULsg8bGfDakYUrdhe2EHw5uGKX9DrMbrgYnVfDwrksT4ZVQ3vmgEruo3Ka
          type: string
        destinationTag:
          description: 'In case of XRP, destinationTag is the distinguisher of the account.'
          type: number
          example: 5
        memo:
          description: 'In case of BNB, message is the distinguisher of the account.'
          type: string
          example: '5'
        message:
          description: 'In case of XLM, message is the distinguisher of the account.'
          type: string
          example: '5'
      type: object
    Consumption:
      type: object
      properties:
        day:
          type: number
          description: UTC millis timestamp of the day.
          example: 1596801302663
        usage:
          type: number
          description: Number of credits consumed for the specific day.
          example: 123
    ExchangeRate:
      description: FIAT value in EURO of the FIAT or crypto asset.
      properties:
        id:
          description: FIAT or crypto asset.
          example: BTC
          type: string
          enum:
            - AED
            - AFN
            - ALL
            - AMD
            - ANG
            - AOA
            - ARS
            - AUD
            - AWG
            - AZN
            - BAM
            - BAT
            - BBD
            - BCH
            - BDT
            - BGN
            - BHD
            - BIF
            - BMD
            - BND
            - BOB
            - BRL
            - BSD
            - BTC
            - BTN
            - BWP
            - BYN
            - BYR
            - BZD
            - CAD
            - CDF
            - CHF
            - CLF
            - CLP
            - CNY
            - COP
            - CRC
            - CUC
            - CUP
            - CVE
            - CZK
            - DJF
            - DKK
            - DOP
            - DOGE
            - DZD
            - EGP
            - ERN
            - ETB
            - ETH
            - EUR
            - FJD
            - FKP
            - FLOW
            - FUSD
            - FREE
            - GMC
            - GMC_BSC
            - RMD
            - GBP
            - GEL
            - GGP
            - GHS
            - GIP
            - GMD
            - GNF
            - GTQ
            - GYD
            - HKD
            - HNL
            - HRK
            - HTG
            - HUF
            - IDR
            - ILS
            - IMP
            - INR
            - IQD
            - IRR
            - ISK
            - JEP
            - JMD
            - JOD
            - JPY
            - KES
            - KGS
            - KHR
            - KMF
            - KPW
            - KRW
            - KWD
            - KYD
            - KZT
            - LAK
            - LBP
            - LEO
            - LINK
            - LKR
            - LRD
            - LSL
            - LTC
            - LTL
            - LVL
            - LYD
            - MAD
            - MDL
            - MGA
            - MKD
            - MKR
            - MMK
            - MMY
            - MNT
            - MOP
            - MRO
            - MUR
            - MVR
            - MWK
            - MXN
            - MYR
            - MZN
            - NAD
            - NGN
            - NIO
            - NOK
            - NPR
            - NZD
            - OMR
            - PAB
            - PAX
            - PAXG
            - PEN
            - PGK
            - PHP
            - PKR
            - PLN
            - PLTC
            - PYG
            - QAR
            - RON
            - RSD
            - RUB
            - RWF
            - SAR
            - SBD
            - SCR
            - SDG
            - SEK
            - SGD
            - SHP
            - SLL
            - SOS
            - SRD
            - STD
            - SVC
            - SYP
            - SZL
            - THB
            - TJS
            - TMT
            - TND
            - TOP
            - TRY
            - TTD
            - TRON
            - TUSD
            - BUSD
            - TWD
            - TZS
            - UAH
            - UGX
            - UNI
            - USD
            - USDC
            - USDT
            - USDT_TRON
            - USDT_MATIC
            - QTUM
            - UYU
            - UZS
            - VEF
            - VND
            - VUV
            - WBTC
            - WST
            - XAF
            - XAG
            - XAU
            - XCD
            - XCON
            - XDR
            - XLM
            - XOF
            - XPF
            - XRP
            - YER
            - ZAR
            - ZMK
            - ZMW
            - ZWL
        value:
          description: FIAT value of the asset in given base pair.
          example: '1235.56'
          type: string
        basePair:
          description: Base pair.
          example: EUR
          default: EUR
          type: string
          enum:
            - AED
            - AFN
            - ALL
            - AMD
            - ANG
            - AOA
            - ARS
            - AUD
            - AWG
            - AZN
            - BAM
            - BAT
            - BBD
            - BCH
            - BDT
            - BGN
            - BHD
            - BIF
            - BMD
            - BND
            - BOB
            - BRL
            - BSD
            - BTC
            - BTN
            - BWP
            - BYN
            - BYR
            - BZD
            - CAD
            - CDF
            - CHF
            - CLF
            - CLP
            - CNY
            - COP
            - CRC
            - CUC
            - CUP
            - CVE
            - CZK
            - DJF
            - DKK
            - DOP
            - DOGE
            - DZD
            - EGP
            - ERN
            - ETB
            - ETH
            - EUR
            - FJD
            - FKP
            - FLOW
            - FUSD
            - FREE
            - GMC
            - GMC_BSC
            - RMD
            - GBP
            - GEL
            - GGP
            - GHS
            - GIP
            - GMD
            - GNF
            - GTQ
            - GYD
            - HKD
            - HNL
            - HRK
            - HTG
            - HUF
            - IDR
            - ILS
            - IMP
            - INR
            - IQD
            - IRR
            - ISK
            - JEP
            - JMD
            - JOD
            - JPY
            - KES
            - KGS
            - KHR
            - KMF
            - KPW
            - KRW
            - KWD
            - KYD
            - KZT
            - LAK
            - LBP
            - LEO
            - LINK
            - LKR
            - LRD
            - LSL
            - LTC
            - LTL
            - LVL
            - LYD
            - MAD
            - MDL
            - MGA
            - MKD
            - MKR
            - MMK
            - MMY
            - MNT
            - MOP
            - MRO
            - MUR
            - MVR
            - MWK
            - MXN
            - MYR
            - MZN
            - NAD
            - NGN
            - NIO
            - NOK
            - NPR
            - NZD
            - OMR
            - PAB
            - PAX
            - PAXG
            - PEN
            - PGK
            - PHP
            - PKR
            - PLN
            - PLTC
            - PYG
            - QAR
            - RON
            - RSD
            - RUB
            - RWF
            - SAR
            - SBD
            - SCR
            - SDG
            - SEK
            - SGD
            - SHP
            - SLL
            - SOS
            - SRD
            - STD
            - SVC
            - SYP
            - SZL
            - THB
            - TJS
            - TMT
            - TND
            - TOP
            - TRY
            - TTD
            - TRON
            - TUSD
            - BUSD
            - TWD
            - TZS
            - UAH
            - UGX
            - UNI
            - USD
            - USDC
            - USDT
            - USDT_TRON
            - USDT_MATIC
            - QTUM
            - UYU
            - UZS
            - VEF
            - VND
            - VUV
            - WBTC
            - WST
            - XAF
            - XAG
            - XAU
            - XCD
            - XCON
            - XDR
            - XLM
            - XOF
            - XPF
            - XRP
            - YER
            - ZAR
            - ZMK
            - ZMW
            - ZWL
        timestamp:
          description: Date of validity of rate in UTC.
          example: 1572031674384
          type: number
        source:
          description: Source of base pair.
          example: fixer.io
          type: string
      type: object
      required:
        - id
        - value
        - basePair
        - timestamp
        - source
    PendingTransaction:
      type: object
      properties:
        id:
          description: ID of the pending transaction
          example: 5e6645712b55823de7ea82f1
          type: string
        chain:
          type: string
          example: ETH
          description: Blockchain of the transaction
          enum:
            - BNB
            - BTC
            - ETH
            - XLM
            - XRP
            - BCH
            - LTC
            - DOGE
            - VET
            - BSC
            - ADA
            - MATIC
            - CELO
            - FLOW
            - TRON
            - ONE
            - XDC
            - EGLD
            - KLAY
            - LUNA
            - SOL
        hashes:
          type: array
          description: 'List of the signature Ids to be used to sign transaction. Those hashes should be in order of signing for the BTC, LTC or BCH blockchains.'
          items:
            type: string
            description: Signature hash representing wallet or private key managed in the Tatum KMS instance.
            example: 1234987askdjfb1o2873ryskajfb1234987askdjfb1o2873ryskajfb1234987askdjfb1o2873ryskajfb
        serializedTransaction:
          type: string
          example: alskdjfq8o27fbkasljfbq8o7b4fqo83f7bqejhafbo8q4f
          description: 'Serialized data of the transaction to be signed. It can be JSON, HEX or any other representation based on the blockchain.'
        withdrawalId:
          description: ID of the pending off-chain withdrawal connected to this transaction
          example: 5e6645712b55823de7ea82f1
          type: string
        index:
          type: number
          description: 'In case of mnemonic type of signature Id, this is the index to the specific account that should be used for signature.'
          example: 1
          minimum: 0
        txId:
          description: TX hash of successful transaction.
          example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
          type: string
        withdrawalResponses:
          items:
            $ref: '#/components/schemas/ResponseData'
          type: array
          description: 'Additional information used for BTC, LTC, DOGE and BCH off-chain to blockchain transactions.'
      required:
        - id
        - chain
        - serializedTransaction
        - hashes
    ResponseData:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        amount:
          description: 'Amount of unprocessed transaction outputs, that can be used for withdrawal. Bitcoin, Litecoin, Bitcoin Cash only.'
          type: number
        vIn:
          description: 'Last used unprocessed transaction output, that can be used. Bitcoin, Litecoin, Bitcoin Cash only. If -1, it indicates prepared vOut with amount to be transferred to pool address.'
          type: string
        vInIndex:
          description: 'Index of last used unprocessed transaction output in raw transaction, that can be used. Bitcoin, Litecoin, Bitcoin Cash only.'
          type: integer
        scriptPubKey:
          type: string
          description: Script of last unprocessed UTXO. Bitcoin SV only.
    Error400:
      properties:
        errorCode:
          example: validation.failed
          description: validation.failed
          type: string
        message:
          example: Request validation failed. Please see data for additional information.
          description: Request validation failed. Please see data for additional information.
          type: string
        statusCode:
          example: 400
          description: '400'
          type: number
        data:
          type: array
          items:
            type: object
            required:
              - target
            properties:
              target:
                type: object
                additionalProperties: true
                description: Request object present in the body of the HTTP request
              value:
                type: number
                description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                example: 12345
              property:
                type: string
                description: Property name of the target object which validation is wrong
                example: fromPrivateKey
              constraints:
                type: object
                additionalProperties: true
                description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                example:
                  isNotEmpty: fromPrivateKey should not be empty
    Error401:
      properties:
        statusCode:
          example: 401
          description: '401'
          type: number
        errorCode:
          example: subscription.unauthorized
          description: Subscription missing or invalid
          type: string
        message:
          example: 'Unable to find valid subscription for ''${apiKey}'' or subscription not active anymore.'
          description: 'Unable to find valid subscription for ''${apiKey}'' or subscription not active anymore.'
          type: string
      required:
        - statusCode
        - message
      type: object
    Error401Invalid:
      properties:
        errorCode:
          example: subscription.invalid
          description: subscription.invalid
          type: string
        message:
          example: 'Unable to find valid subscription for ''${apiKey}'''
          description: 'Unable to find valid subscription for ''${apiKey}'''
          type: string
        statusCode:
          example: 401
          description: '401'
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error401NotActive:
      properties:
        errorCode:
          example: subscription.not.active
          description: subscription.not.active
          type: string
        message:
          example: Subscription not active anymore.
          description: Subscription not active anymore.
          type: string
        statusCode:
          example: 401
          description: '401'
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403:
      properties:
        statusCode:
          example: 403
          description: '403'
          type: number
        errorCode:
          example: request.forbidden
          description: Invalid request logic or permission error
          type: string
        message:
          example: '''Logical error or invalid permission: ${reason} '''
          description: 'The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          type: string
      required:
        - statusCode
        - message
      type: object
    Error500:
      properties:
        message:
          example: Internal server error
          description: Internal server error
          type: string
        statusCode:
          example: 500
          description: '500'
          type: number
        errorCode:
          example: internal.error
          description: Internal server error
          type: string
      required:
        - statusCode
        - message
      type: object
  securitySchemes:
    X-Api-Key:
      description: |
        To maintain the highest security level, Tatum requires X-API-Key HTTP header.
        This X-API-Key represents identification of the plan and can be used by 1 developer or per environment.
        Each X-API-Key is bound to the test or production blockchains.
      in: header
      name: x-api-key
      type: apiKey
