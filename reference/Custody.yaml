openapi: 3.1.0
info:
  description:       
        <i><strong>Alpha feature</strong></i>
        <p><i>Experimental feature still under development</p></i>

      <p>Custodial API is a set of operations, which allows you to work with managed blockchain addresses without having its private key.
      You can easily create new managed address and export its details - with private key as well - once required.</p>
      <br/> <br/>
       <p><b>Free users can manage only 10 addresses per API Key</b></p>
  contact: {}
  title: Managed wallets
  version: 3.9.4
  x-logo:
    url: 'https://tatum.io/images/logo.svg'
    altText: Tatum
servers:
  - url: 'https://api-eu1.tatum.io'
  - url: 'https://api-us-west1.tatum.io'
tags:
  - description: ''
    name: Wallet operations
paths:
  /v3/custodial/wallet:
    post:
      description: |
        <h4>2 credits per API call, 10 credits for each managed wallet every day.</h4><br/>
        <p>Create new managed address for a specific chain. If the address is mainnet or testnet one depends on the API Key - testnet API Key manages testnet addresses, mainnet API Key manages mainnet addresses.
        Result of the operation is address and walletId, which is used for identifying the wallet later on and/or exporting the private key if needed.
        </p>
        <p><b>Free users can manage only 10 addresses per API Key</b></p>
      operationId: CustodialCreateWallet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                chain:
                  type: string
                  example: SOL
                  enum:
                    - SOL
                    - BSC
                    - ETH
                    - KLAY
                    - ONE
                    - CELO
                    - MATIC
                    - LTC
                    - BTC
              required:
                - chain
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                  - address
                  - walletId
                  - chain
                properties:
                  address:
                    type: string
                    description: Blockchain address
                    example: 8oJ8KRL87ja7DjPSsmBG1KtfrpsfLGDMJDGzev68DGqx
                  walletId:
                    type: string
                    format: uuid
                    example: 52901013-94ab-4124-8645-acba4ee90bb8
                    description: Unique identifier of the managed address
                  chain:
                    type: string
                    description: Blockchain of the address
                    example: SOL
                    enum:
                      - SOL
                      - BSC
                      - ETH
                      - KLAY
                      - ONE
                      - CELO
                      - MATIC   
                      - LTC
                      - BTC
                  privateKey:
                    type: string
                    example: 4jCFiqh3tLxKxt3vYW478qodivkCkSzqtpG4wqEaYkgdVC1o79a1VJTc5UiCmCmZBwoJmjaenfYH1ML7ra8vbNpA
                    description: Private key of the address. Not present by default.
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Create managed address
      tags:
        - Wallet operations
    get:
      description: |
        <h4>1 credit per API call.</h4><br/>
        <p>Get all managed addresses for an API Key.</p>
      operationId: CustodialGetWallets
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - address
                    - walletId
                    - chain
                  properties:
                    address:
                      type: string
                      description: Blockchain address
                      example: 8oJ8KRL87ja7DjPSsmBG1KtfrpsfLGDMJDGzev68DGqx
                    walletId:
                      type: string
                      format: uuid
                      example: 52901013-94ab-4124-8645-acba4ee90bb8
                      description: Unique identifier of the managed address
                    chain:
                      type: string
                      description: Blockchain of the address
                      example: SOL
                      enum:
                        - SOL
                        - BSC
                        - ETH
                        - KLAY
                        - ONE
                        - CELO
                        - MATIC
                        - LTC
                        - BTC
                    privateKey:
                      type: string
                      example: 4jCFiqh3tLxKxt3vYW478qodivkCkSzqtpG4wqEaYkgdVC1o79a1VJTc5UiCmCmZBwoJmjaenfYH1ML7ra8vbNpA
                      description: Private key of the address. Not present by default.
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Get managed addresses
      tags:
        - Wallet operations
  '/v3/custodial/wallet/{id}':
    get:
      description: |
        <h4>1 credit per API call.</h4><br/>
        <p>Get managed address for an API Key. It's possible to export the private key, if query parameter <b>export</b> is set to true.</p>
      operationId: CustodialGetWallet
      parameters:
        - in: path
          required: true
          description: WalletID of the managed address
          name: id
          schema:
            type: string
            format: uuid
            example: 3ad54647-4166-4d34-9186-fd46caaba945
        - in: query
          name: export
          required: false
          description: 'If set to, export the private key details in the response'
          schema:
            type: boolean
            default: false
            enum:
              - true
              - false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - address
                    - walletId
                    - chain
                  properties:
                    address:
                      type: string
                      description: Blockchain address
                      example: 8oJ8KRL87ja7DjPSsmBG1KtfrpsfLGDMJDGzev68DGqx
                    walletId:
                      type: string
                      format: uuid
                      example: 52901013-94ab-4124-8645-acba4ee90bb8
                      description: Unique identifier of the managed address
                    chain:
                      type: string
                      description: Blockchain of the address
                      example: SOL
                      enum:
                        - SOL
                        - BSC
                        - ETH
                        - KLAY
                        - ONE
                        - CELO
                        - MATIC
                        - LTC
                        - BTC
                    privateKey:
                      type: string
                      example: 4jCFiqh3tLxKxt3vYW478qodivkCkSzqtpG4wqEaYkgdVC1o79a1VJTc5UiCmCmZBwoJmjaenfYH1ML7ra8vbNpA
                      description: Private key of the address. Not present by default.
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Get managed address
      tags:
        - Wallet operations
    delete:
      description: |
        <h4>1 credit per API call.</h4><br/>
        <p>Delete managed address. Once deleted, the address won't be charged in a daily credit usage, but it <b>won't be possible to get the private key</b> for it.</p>
      operationId: CustodialDeleteWallet
      parameters:
        - in: path
          required: true
          description: WalletID of the managed address
          name: id
          schema:
            type: string
            format: uuid
            example: 3ad54647-4166-4d34-9186-fd46caaba945
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Delete managed address
      tags:
        - Wallet operations
  /v3/custodial/transaction:
    post:
      description: |
        <h4>2 credits per API call, additional credits are charged for each gas covered operation.</h4><br/>
        <p>Sign transaction and transfer assets from a custodial managed address.<br/>
        Supported chains:
        <ul>
        <li><b>Solana</b></li>
        </ul>
        <br/>
        Logic for <b>Solana</b><br/>
        In Solana, it's possible to cover the fees connected to any arbitrary transaction by a third party.
        Tatum can cover these fees for any transaction on the Solana blockchain - transfer of SOL, SPL tokens, 
        minting or transferring NFTs or invoking programs.
        In order to do this, Tatum fee address must be used as a feePayer address during transaction creation:
        <ul>
        <li>Mainnet address: `DSpHmb7hLnetoybammcJBJiyqMVR3pDhCuW6hqVg9eBF`</li>
        <li>Testnet address: `5zPr5331CtBjgVeLedhmJPEpFaUsorLCnb3aCQPsUc9w`</li>
        </ul
        Once transaction is constructed using <a href="https://github.com/solana-labs/solana-web3.js/" target="_blank">Solana SDK</a>, it can be serialized to HEX data string, which is then passed to the API and signed.<br/>
        Transaction could require multiple private keys for signing - fee payer, sender of the SOL assets, minting key during NFT mint operation etc.
        Some of the keys are used in Tatum - fee payer, or, in case of managed wallet holding SOL assets, the key of that managed wallet - those must be referenced in a list of walletIds to be used.
        For external keys, which are not managed by Tatum, those could either sign the transaction before it's serialization, or could be passed to the API in it's raw form - this is OK only for keys, which could be exposed and there is no harm of loosing assets on them.<br/>
        <b>Fee payer key is used by default, doesn't have to be mentioned in the list of wallets used for signing.</b><br/><br/>
        <b>Examples of different transaction payloads.</b><br/><br/>
        1. Send SOL from account `HrJtQTy2RW9c6y41RvN8x3bEiD6Co74AuhER2MGCpa58` to `FZAS4mtPvswgVxbpc117SqfNgCDLTCtk5CoeAtt58FWU`
        <code>
        import { LAMPORTS_PER_SOL, PublicKey, SystemProgram, Transaction } from '@solana/web3.js'
        const from = 'HrJtQTy2RW9c6y41RvN8x3bEiD6Co74AuhER2MGCpa58'
        const to = 'FZAS4mtPvswgVxbpc117SqfNgCDLTCtk5CoeAtt58FWU'
        const amount = '0.000001'
        const devnet_fee_payer = '5zPr5331CtBjgVeLedhmJPEpFaUsorLCnb3aCQPsUc9w'
        const fromPubkey = new PublicKey(from)
        const transaction = new Transaction({ feePayer: new PublicKey(devnet_fee_payer) })
        transaction.add(
          SystemProgram.transfer({
            fromPubkey: fromPubkey,
            toPubkey: new PublicKey(to),
            lamports: new BigNumber(amount).multipliedBy(LAMPORTS_PER_SOL).toNumber(),
          }),
        )
        transaction.recentBlockhash = '7WyEshBZcZwEbJsvSeGgCkSNMxxxFAym3x7Cuj6UjAUE' // any arbitrary block hash, will be replaced later in the process
        return transaction.compileMessage().serialize().toString('hex')
        </code>
        For the above example, developer have 2 options how to sign transaction - if the sender address `HrJtQTy2RW9c6y41RvN8x3bEiD6Co74AuhER2MGCpa58` is managed using a Tatum managed wallet with id `0b1eae3d-2520-4903-8bbf-5dec3ad2a5d4`,
        the final payload to the custodial/transaction endpoint should look like this:
        <code>
        {
          "chain": "SOL",
          "txData": "020001044a22af97a838a504e6f7c0b18d779afcea612da50794cc1dac641861fc1ab14afa5cacaf91c298694e64bb5496916c3c68a32affb92d4bcd2736fbb00169d57bd840de2a454960308f688cd3ee308c1fa01ecfa0b03770aaaf3b52d71d46c31d000000000000000000000000000000000000000000000000000000000000000060d38e0da20dc5900b7e902c918eae6a95e2d90af154b53a422f4ab26b050f4f01030201020c02000000e803000000000000",
          "walletIds": [
            {
              "key": "0b1eae3d-2520-4903-8bbf-5dec3ad2a5d4",
              "type": "MANAGED"
            }
          ]
        }
        </code>
        If the sender address is not managed, the transaction could be signed with the private key of that address before the serialization and the payload will look like this:
        <code>
        {
          "chain": "SOL",
          "txData": "020001044a22af97a838a504e6f7c0b18d779afcea612da50794cc1dac641861fc1ab14afa5cacaf91c298694e64bb5496916c3c68a32affb92d4bcd2736fbb00169d57bd840de2a454960308f688cd3ee308c1fa01ecfa0b03770aaaf3b52d71d46c31d000000000000000000000000000000000000000000000000000000000000000060d38e0da20dc5900b7e902c918eae6a95e2d90af154b53a422f4ab26b050f4f01030201020c02000000e803000000000000",
          "walletIds": []
        }
        </code>
        </p>
      operationId: CustodialTransferManagedAddress
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                chain:
                  type: string
                  description: Blockchain to work on
                  example: SOL
                  enum:
                    - SOL
                txData:
                  type: string
                  minLength: 1
                  maxLength: 500000
                  description: 'Hex serialized data representing transaction, which should be signed using one of the managed wallets.'
                  example: 020001044a22af97a838a504e6f7c0b18d779afcea612da50794cc1dac641861fc1ab14afa5cacaf91c298694e64bb5496916c3c68a32affb92d4bcd2736fbb00169d57bd840de2a454960308f688cd3ee308c1fa01ecfa0b03770aaaf3b52d71d46c31d000000000000000000000000000000000000000000000000000000000000000060d38e0da20dc5900b7e902c918eae6a95e2d90af154b53a422f4ab26b050f4f01030201020c02000000e803000000000000
                walletIds:
                  type: array
                  items:
                    type: object
                    required:
                      - key
                      - type
                    properties:
                      key:
                        type: string
                        description: 'Wallet ID of wallet, which should be used for signing. In case of RAW type of the wallet, this represents the private key which will be used for signatures.'
                        example: 0b1eae3d-2520-4903-8bbf-5dec3ad2a5d4
                      type:
                        type: string
                        example: MANAGED
                        description: 'Type of the wallet to be used - RAW represents native private key, MANAGED represents ID of the managed wallet.'
                        enum:
                          - MANAGED
                          - RAW
              required:
                - chain
                - txData
                - walletIds
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  txId:
                    description: TX hash of successful transaction.
                    example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                    type: string
                required:
                  - txId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Sign and transfer using managed address
      tags:
        - Wallet operations
components:
  securitySchemes:
    X-Api-Key:
      description: |
        To maintain the highest security level, Tatum requires X-API-Key HTTP header.
        This X-API-Key represents identification of the plan and can be used by 1 developer or per environment.
        Each X-API-Key is bound to the test or production blockchains.
      in: header
      name: x-api-key
      type: apiKey
